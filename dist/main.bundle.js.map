{"version":3,"sources":["webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/Services/firebase.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src async","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA0C;AAC0B;AAGN;AAW9D,IAAa,YAAY;IA0BvB,sBACU,gBAAiC,EACjC,EAAe;QAFzB,iBAqCC;QApCS,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,OAAE,GAAF,EAAE,CAAa;QAVzB,yBAAoB,GAAQ,EAAE,CAAC;QAE/B,iBAAiB;QACjB,gBAAW,GAAQ,EAAE,CAAC;QASpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClE,UAAU,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACpE,gBAAgB,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAChF,aAAa,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC1E,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9D,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9D,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC5D,eAAe,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9E,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9D,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAElE,eAAe;YACf,eAAe,EAAE,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClE,gBAAgB,EAAE,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACpE,sBAAsB,EAAE,CAAC,IAAI,CAAC,oBAAoB,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAChF,mBAAmB,EAAE,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC1E,aAAa,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9D,aAAa,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9D,YAAY,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC5D,qBAAqB,EAAE,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9E,aAAa,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC9D,eAAe,EAAE,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;SAEnE,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,oBAAU;YACtD,KAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7B,CAAC,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,oBAAU;YACvD,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC;IAEJ,CAAC;IAED,kCAAW,GAAX,UAAY,KAAK,EAAE,GAAG;QACpB,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC,CAAC;QAE1C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAExB,CAAC;IAED,qCAAc,GAAd,UAAe,QAAQ;QAAvB,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QAErB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,oBAAU;YAC9D,KAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7B,CAAC,CAAC;IAEJ,CAAC;IAGD,kCAAW,GAAX;QACE,IAAI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC;QAI3C,IAAI,WAAW,GAAG;YAChB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW;YACzC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa;YAC7C,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc;YAC/C,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,UAAU,EAAE,UAAU;SAEvB;QACD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC;IAGhC,CAAC;IAED,+BAAQ,GAAR,UAAS,QAAQ;QAEf,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,cAAc,CAAC;QACpD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,WAAW,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC;IACxC,CAAC;IAED,qCAAc,GAAd;QAEE,IAAI,cAAc,GAAG;YACnB,OAAO,EAAE,IAAI,CAAC,aAAa;YAC3B,QAAQ,EAAE,IAAI,CAAC,cAAc;YAC7B,cAAc,EAAE,IAAI,CAAC,oBAAoB;YACzC,WAAW,EAAE,IAAI,CAAC,iBAAiB;YACnC,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,IAAI,EAAE,IAAI,CAAC,UAAU;YACrB,aAAa,EAAE,IAAI,CAAC,mBAAmB;YACvC,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,OAAO,EAAE,IAAI,CAAC,aAAa;SAE5B;QAED,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5B,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC;IAEtE,CAAC;IACD,qCAAc,GAAd,UAAe,GAAG;QAChB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,GAAG,CAAC;IAE3C,CAAC;IAQH,mBAAC;AAAD,CAAC;AAhKY,YAAY;IALxB,wFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,kCAAmC;QACnC,kCAAkC;KACnC,CAAC;yDA4B4B,mFAAe,oBAAf,mFAAe,sDAC7B,mEAAW,oBAAX,mEAAW;GA5Bd,YAAY,CAgKxB;AAhKwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfiC;AACjB;AACyB;AACvB;AAC3C,eAAe;AAC2C;AACT;AACiB;AACR;AACI;AAEf;AAmB/C,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAjBrB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,iEAAU;YACV,2EAAmB;YACnB,uEAAiB,CAAC,aAAa,CAAC,8EAAW,CAAC,QAAQ,EAAC,aAAa,CAAC;YACnE,wFAAyB;YACzB,gFAAqB;SAEtB;QACD,SAAS,EAAE,CAAC,mFAAe,CAAC;QAC5B,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;AC9BtB;AACA;;;AAGA;AACA,6CAA8C,mCAAmC,qBAAqB,KAAK,wBAAwB,2BAA2B,qBAAqB,KAAK,YAAY,yBAAyB,KAAK,aAAa,yBAAyB,YAAY,cAAc,qBAAqB,+BAA+B,KAAK,4BAA4B,kBAAkB,+BAA+B,KAAK,KAAK;;AAElb;;;AAGA;AACA,2C;;;;;;;ACXA,kxBAAkxB,iBAAiB,KAAK,iBAAiB,ioCAAioC,iBAAiB,KAAK,iBAAiB,uxHAAuxH,iBAAiB,KAAK,iBAAiB,iuGAAiuG,sBAAsB,kCAAkC,yBAAyB,0CAA0C,+BAA+B,uBAAuB,4BAA4B,iKAAiK,oBAAoB,8BAA8B,oBAAoB,8BAA8B,4BAA4B,8BAA8B,mBAAmB,8BAA8B,oBAAoB,8BAA8B,sBAAsB,ghBAAghB,sBAAsB,2BAA2B,uBAAuB,2BAA2B,oBAAoB,mlBAAmlB,sBAAsB,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA10V;AACyC;AAGtD;AAG9B,IAAa,eAAe;IAI1B,yBAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;IAE3C,CAAC;IACD,qCAAW,GAAX,UAAY,QAAuB;QAAvB,0CAAuB;QAEjC,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE;gBAC3C,KAAK,EAAE;oBACL,YAAY,EAAE,UAAU;oBACxB,OAAO,EAAE,QAAQ;iBAClB;aACF,CACmC,CAAC;QAIvC,CAAC;QACD,IAAI,CAAC,CAAC;YAEJ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAuC,CAAC;QACrF,CAAC;QAGD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAEzB,CAAC;IACD,sCAAY,GAAZ;QAEE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAyC,CAAC;QACrF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAEzB,CAAC;IACA,qCAAW,GAAX,UAAY,WAAW;QACvB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAE1C,CAAC;IAEA,wCAAc,GAAd,UAAe,GAAG,EAAE,cAAc;QAClC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAC,cAAc,CAAC,CAAC;IAEnD,CAAC;IACA,wCAAc,GAAd,UAAe,GAAG;QAClB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC;IAEnC,CAAC;IAGH,sBAAC;AAAD,CAAC;AAnDY,eAAe;IAD3B,wFAAU,EAAE;yDAKa,kFAAmB,oBAAnB,kFAAmB;GAJhC,eAAe,CAmD3B;AAnD2B;;;;;;;;;;ACP5B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,+BAA+B;AAC/B,sBAAsB;AACtB,KAAK;AAEL,mFATmF;AAS5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,wCAAwC;QACpD,WAAW,EAAE,+CAA+C;QAC5D,SAAS,EAAE,wBAAwB;QACnC,aAAa,EAAE,oCAAoC;KAEpD;CACF,CAAC;;;;;;;;ACnBF;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n//angularfire 2\r\nimport { AngularFireDatabase, FirebaseListObservable } from 'angularfire2/database';\r\nimport { FirebaseService } from './Services/firebase.service';\r\n\r\nimport { Business } from './Business';\r\nimport { Catagories } from './Catagories';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  business: Business[];\r\n  catagories: Catagories[];\r\n  appState: string;\r\n  activeKey: string;\r\n\r\n  //For edit From\r\n\r\n  activeCompany: string;\r\n  activeCategory: string;\r\n  activeYearInBusiness: string;\r\n  activeDescription: string;\r\n  activePhone: string;\r\n  activeEmail: any;\r\n  activeCity: any;\r\n  activeStreetAddress: string;\r\n  activeState: string;\r\n  activeZipCode: string;\r\n  activeBusinessRecord: any = {};\r\n\r\n  //form validation\r\n  newBusiness: any = {};\r\n  form: FormGroup;\r\n  Msg: any;\r\n\r\n\r\n  constructor(\r\n    private _firebaseService: FirebaseService,\r\n    private fb: FormBuilder, ) {\r\n\r\n    this.form = this.fb.group({\r\n      'company': [this.newBusiness.company || null, Validators.required],\r\n      'category': [this.newBusiness.category || null, Validators.required],\r\n      'yearInBusiness': [this.newBusiness.yearInBusiness || null, Validators.required],\r\n      'description': [this.newBusiness.description || null, Validators.required],\r\n      'phone': [this.newBusiness.phone || null, Validators.required],\r\n      'email': [this.newBusiness.email || null, Validators.required],\r\n      'city': [this.newBusiness.city || null, Validators.required],\r\n      'streetAddress': [this.newBusiness.streetAddress || null, Validators.required],\r\n      'state': [this.newBusiness.state || null, Validators.required],\r\n      'zipCode': [this.newBusiness.zipCode || null, Validators.required],\r\n\r\n      //Active Record\r\n      'activeCompany': [this.activeCompany || null, Validators.required],\r\n      'activeCategory': [this.activeCategory || null, Validators.required],\r\n      'activeYearInBusiness': [this.activeYearInBusiness || null, Validators.required],\r\n      'activeDescription': [this.activeDescription || null, Validators.required],\r\n      'activePhone': [this.activePhone || null, Validators.required],\r\n      'activeEmail': [this.activeEmail || null, Validators.required],\r\n      'activeCity': [this.activeCity || null, Validators.required],\r\n      'activeStreetAddress': [this.activeStreetAddress || null, Validators.required],\r\n      'activeState': [this.activeState || null, Validators.required],\r\n      'activeZipCode': [this.activeZipCode || null, Validators.required],\r\n\r\n    })\r\n\r\n    this._firebaseService.getBusiness().subscribe(businesses => {\r\n      this.business = businesses;\r\n    })\r\n    this._firebaseService.getCatagores().subscribe(categories => {\r\n      this.catagories = categories;\r\n    })\r\n\r\n  }\r\n\r\n  changeState(state, key) {\r\n    console.log('Changing state to:' + state);\r\n\r\n    if (key) {\r\n      console.log('Changing key to:' + key);\r\n      this.activeKey = key;\r\n    }\r\n    this.appState = state;\r\n\r\n  }\r\n\r\n  filterCategory(category) {\r\n    console.log(category)\r\n\r\n    this._firebaseService.getBusiness(category).subscribe(businesses => {\r\n      this.business = businesses;\r\n    })\r\n\r\n  }\r\n\r\n\r\n  addBusiness() {\r\n    let created_at = new Date().toDateString();\r\n\r\n\r\n\r\n    let newBusiness = {\r\n      category: this.newBusiness.category,\r\n      city: this.newBusiness.city,\r\n      company: this.newBusiness.company,\r\n      description: this.newBusiness.description,\r\n      email: this.newBusiness.email,\r\n      phone: this.newBusiness.phone,\r\n      state: this.newBusiness.state,\r\n      streetAddress: this.newBusiness.streetAddress,\r\n      yearInBusiness: this.newBusiness.yearInBusiness,\r\n      zipCode: this.newBusiness.zipCode,\r\n      created_at: created_at\r\n\r\n    }\r\n    console.log(newBusiness);\r\n    this._firebaseService.addBusiness(newBusiness);\r\n    this.changeState('default',0);\r\n\r\n\r\n  }\r\n\r\n  showEdit(business) {\r\n\r\n    this.changeState('edit', business.$key);\r\n\r\n    this.activeCompany = business.company;\r\n    this.activeCategory = business.category;\r\n    this.activeYearInBusiness = business.yearInBusiness;\r\n    this.activeDescription = business.description;\r\n    this.activePhone = business.phone;\r\n    this.activeEmail = business.email;\r\n    this.activeCity = business.city;\r\n    this.activeStreetAddress = business.streetAddress;\r\n    this.activeState = business.state;\r\n    this.activeZipCode = business.zipCode;\r\n  }\r\n\r\n  updateBusiness() {\r\n\r\n    let updateBusiness = {\r\n      company: this.activeCompany,\r\n      category: this.activeCategory,\r\n      yearInBusiness: this.activeYearInBusiness,\r\n      description: this.activeDescription,\r\n      phone: this.activePhone,\r\n      email: this.activeEmail,\r\n      city: this.activeCity,\r\n      streetAddress: this.activeStreetAddress,\r\n      state: this.activeState,\r\n      zipCode: this.activeZipCode\r\n\r\n    }\r\n\r\n    console.log(updateBusiness);\r\n\r\n    this._firebaseService.updateBusiness(this.activeKey, updateBusiness)\r\n\r\n  }\r\n  deleteBusiness(key) {\r\n    this._firebaseService.deleteBusiness(key)\r\n\r\n  }\r\n    // hideEdit(){\r\n    //    this.changeState('default',0);\r\n\r\n    // }\r\n  \r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n//angularfire 2\r\nimport { environment } from '../environments/environment';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { FirebaseService } from './Services/firebase.service';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    AngularFireModule.initializeApp(environment.firebase,'my-app-name'),\r\n    AngularFireDatabaseModule, // imports firebase/database, only needed for database features\r\n    AngularFireAuthModule,\r\n    \r\n  ],\r\n  providers: [FirebaseService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".top-bar,.menu > ul{\\r\\n     background-color: #e67e22;\\r\\n     color: #fff;\\r\\n}\\r\\n\\r\\n.menu > ul >li {\\r\\n list-style-type: none;\\r\\n font-size: 26px;\\r\\n}\\r\\n.margin{\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.butnDiv{\\r\\n    margin-top: 20px;\\r\\n   \\r\\n}\\r\\n.btnWidth{\\r\\n    width: 200px;\\r\\n    color: #fff !important;\\r\\n}\\r\\n@media(max-width:992px){\\r\\n    .btnWidth{\\r\\n    width: 100% !important;\\r\\n}\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 161\n// module chunks = 1","module.exports = \"<div class=\\\"top-bar\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"top-bar-left\\\">\\r\\n      <div class=\\\"menu\\\">\\r\\n        <ul>\\r\\n          <li class=\\\"menu-text\\\">Business Contacts</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <!--<div class=\\\"top-bar-right\\\"></div>-->\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row margin\\\">\\r\\n  <div class=\\\"large-6 columns butnDiv\\\">\\r\\n    <button class=\\\"button success btnWidth\\\" (click)=\\\"changeState('add',0)\\\">Add Business</button>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"large-6 columns\\\">\\r\\n    <label>\\r\\n     Filter Category\\r\\n     <select (change)=\\\"filterCategory(selectCategory.value)\\\" #selectCategory>\\r\\n       <option *ngFor=\\\"let category of catagories\\\" value=\\\"{{ category.name }}\\\">{{ category.name }}</option>\\r\\n     </select>\\r\\n\\r\\n   </label>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"appState == 'add' || appState == 'edit' || appState == 'extent'\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"large-12 columns\\\">\\r\\n      <button (click)=\\\"changeState('default',0)\\\" class=\\\"button alert btnWidth\\\">Go Back</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!--  Add Bussiness -->\\r\\n<div *ngIf=\\\"appState == 'add' \\\" class=\\\"row\\\">\\r\\n  <div class=\\\"large-12 columns\\\">\\r\\n\\r\\n    <h3>Add Business</h3>\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>Company\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Company Name\\\"\\r\\n             [formControl]=\\\"form.controls['company']\\\" [(ngModel)]=\\\"newBusiness.company\\\">\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>Category\\r\\n            <select [formControl]=\\\"form.controls['category']\\\" [(ngModel)]=\\\"newBusiness.category\\\"  >\\r\\n              <option *ngFor=\\\"let category of catagories\\\" value=\\\"{{ category.name }}\\\">{{ category.name }}</option>\\r\\n            </select>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>Years In Business\\r\\n             <input type=\\\"number\\\" placeholder=\\\"year in Bussiness\\\"\\r\\n             [formControl]=\\\"form.controls['yearInBusiness']\\\" [(ngModel)]=\\\"newBusiness.yearInBusiness\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>description\\r\\n             <input type=\\\"text\\\" placeholder=\\\"description\\\"\\r\\n               [formControl]=\\\"form.controls['description']\\\" [(ngModel)]=\\\"newBusiness.description\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>Phone\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Phone no\\\" \\r\\n              [formControl]=\\\"form.controls['phone']\\\" [(ngModel)]=\\\"newBusiness.phone\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n\\r\\n          <label>Email\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Email\\\" \\r\\n             [formControl]=\\\"form.controls['email']\\\" [(ngModel)]=\\\"newBusiness.email\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>City\\r\\n             <input type=\\\"text\\\" placeholder=\\\"city\\\"\\r\\n             [formControl]=\\\"form.controls['city']\\\" [(ngModel)]=\\\"newBusiness.city\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>Street Address\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Street Address\\\"\\r\\n             [formControl]=\\\"form.controls['streetAddress']\\\" [(ngModel)]=\\\"newBusiness.streetAddress\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>State\\r\\n             <input type=\\\"text\\\" placeholder=\\\"state\\\"\\r\\n              [formControl]=\\\"form.controls['state']\\\" [(ngModel)]=\\\"newBusiness.state\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>Zip Code\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Zip Code\\\" \\r\\n              [formControl]=\\\"form.controls['zipCode']\\\" [(ngModel)]=\\\"newBusiness.zipCode\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <button class=\\\"button\\\" (click)=\\\"addBusiness()\\\" [disabled]=\\\"!newBusiness.company || !newBusiness.category\\r\\n     || !newBusiness.yearInBusiness || !newBusiness.description || !newBusiness.phone || !newBusiness.email \\r\\n     || !newBusiness.streetAddress || !newBusiness.state || !newBusiness.zipCode || !newBusiness.city\\\">submit</button>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!--  Edit Bussiness -->\\r\\n<div *ngIf=\\\"appState == 'edit' \\\" class=\\\"row\\\">\\r\\n  <div class=\\\"large-12 columns\\\">\\r\\n\\r\\n    <h3>Edit Business</h3>\\r\\n    <form [formGroup]=\\\"form\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>Company\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Company Name\\\" name=\\\"activeCompany\\\"\\r\\n             [formControl]=\\\"form.controls['activeCompany']\\\" [(ngModel)]=\\\"activeCompany\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>Category\\r\\n            <select [formControl]=\\\"form.controls['activeCategory']\\\" [(ngModel)]=\\\"activeCategory\\\">\\r\\n              <option *ngFor=\\\"let category of catagories\\\" value=\\\"{{ category.name }}\\\">{{ category.name }}</option>\\r\\n            </select>\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>Years In Business\\r\\n             <input type=\\\"number\\\" placeholder=\\\"year in Bussiness\\\"\\r\\n             [formControl]=\\\"form.controls['activeYearInBusiness']\\\" [(ngModel)]=\\\"activeYearInBusiness\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>description\\r\\n             <input type=\\\"text\\\" placeholder=\\\"description\\\"\\r\\n               [formControl]=\\\"form.controls['activeDescription']\\\" [(ngModel)]=\\\"activeDescription\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>Phone\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Phone no\\\" \\r\\n              [formControl]=\\\"form.controls['activePhone']\\\" [(ngModel)]=\\\"activePhone\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>Email\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Email\\\" \\r\\n             [formControl]=\\\"form.controls['activeEmail']\\\" [(ngModel)]=\\\"activeEmail\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>City\\r\\n             <input type=\\\"text\\\" placeholder=\\\"city\\\"\\r\\n             [formControl]=\\\"form.controls['activeCity']\\\" [(ngModel)]=\\\"activeCity\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>Street Address\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Street Address\\\"\\r\\n             [formControl]=\\\"form.controls['activeStreetAddress']\\\" [(ngModel)]=\\\"activeStreetAddress\\\" >\\r\\n          </label>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-6  small-12 columns\\\">\\r\\n          <label>State\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Street Address\\\"\\r\\n              [formControl]=\\\"form.controls['activeState']\\\" [(ngModel)]=\\\"activeState\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"large-6 small-12 columns\\\">\\r\\n          <label>Zip Code\\r\\n             <input type=\\\"text\\\" placeholder=\\\"Zip Code\\\" \\r\\n              [formControl]=\\\"form.controls['activeZipCode']\\\" [(ngModel)]=\\\"activeZipCode\\\" >\\r\\n          </label>\\r\\n\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <button class=\\\"button btnWidth\\\" (click)=\\\"updateBusiness()\\\"\\r\\n      [disabled]=\\\"!activeCompany || !activeCategory || !activeYearInBusiness\\r\\n     || !activeDescription || !activePhone || !activeEmail || !activeCity \\r\\n     || !activeStreetAddress || !activeState || !activeZipCode\\\">\\r\\n     Update\\r\\n     </button>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"appState == 'extent' \\\">\\r\\n  <div *ngFor=\\\"let businessData of business\\\">\\r\\n    <div *ngIf=\\\"businessData.$key == activeKey\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"large-5 columns large-offset-1\\\">\\r\\n          <h3>{{businessData.company}}</h3>\\r\\n          <p>Category: {{ businessData.category }}</p>\\r\\n          <p>Years In Business: {{ businessData.yearInBusiness }}</p>\\r\\n          <p>{{ businessData.description }}</p>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <h4>Contect Info</h4>\\r\\n        <ul>\\r\\n          <li>\\r\\n            <div>{{businessData.phone}} </div>\\r\\n            <div>{{businessData.email}} </div>\\r\\n            <div>{{businessData.streetAddress}} </div>\\r\\n            <div>{{businessData.city}} </div>\\r\\n            <div>{{businessData.state}} </div>\\r\\n            <div>{{businessData.zipCode}} </div>\\r\\n\\r\\n          </li>\\r\\n        </ul>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"large-12 columns\\\">\\r\\n    <div *ngIf=\\\"business\\\">\\r\\n      <table>\\r\\n        <thead>\\r\\n\\r\\n          <tr>\\r\\n            <th>Company</th>\\r\\n            <th>Category</th>\\r\\n            <th>Phone</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let businessData of business\\\">\\r\\n            <td>{{businessData.company}}</td>\\r\\n            <td>{{businessData.category}}</td>\\r\\n            <td>{{businessData.phone}}</td>\\r\\n            <td>\\r\\n              <button class=\\\"button \\\" (click)=\\\"changeState('extent',businessData.$key)\\\">More</button>\\r\\n              <button class=\\\"button secondary\\\" (click)=\\\"showEdit(businessData)\\\">Edit</button>\\r\\n              <button class=\\\"button alert\\\" (click)=\\\"deleteBusiness(businessData.$key)\\\">Delete</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        </tbody>\\r\\n\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!--<ul>\\r\\n  <li class=\\\"text\\\" *ngFor=\\\"let businessData of business\\\">\\r\\n    <div>{{businessData.company}} </div>\\r\\n\\r\\n  </li>\\r\\n</ul>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 168\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, FirebaseListObservable } from 'angularfire2/database';\nimport { Business } from '../Business';\nimport { Catagories } from '../Catagories';\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class FirebaseService {\n  businesses: FirebaseListObservable<Business[]>;\n  catagories: FirebaseListObservable<Catagories[]>;\n\n  constructor(private db: AngularFireDatabase) {\n\n  }\n  getBusiness(category: string = null) {\n\n    if (category != null) {\n      this.businesses = this.db.list('businesses', {\n        query: {\n          orderByChild: 'category',\n          equalTo: category\n        }\n      }) as\n        FirebaseListObservable<Business[]>;\n\n\n\n    }\n    else {\n\n      this.businesses = this.db.list('businesses') as FirebaseListObservable<Business[]>;\n    }\n\n\n    return this.businesses;\n\n  }\n  getCatagores() {\n\n    this.catagories = this.db.list('catagories') as FirebaseListObservable<Catagories[]>;\n    return this.catagories;\n\n  }\n   addBusiness(newBusiness) {\n   return this.businesses.push(newBusiness);\n\n  }\n\n   updateBusiness(key ,updateBusiness) {\n   return this.businesses.update(key,updateBusiness);\n\n  }\n   deleteBusiness(key) {\n   return this.businesses.remove(key)\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Services/firebase.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\n// export const environment = {\r\n//   production: false\r\n// };\r\n\r\nexport const environment = {\r\n  production: true,\r\n  firebase: {\r\n    apiKey: \"AIzaSyCNC7rQDo3xqBypQoGQcHagm6m6U9jzvwo\",\r\n    authDomain: \"businesscontacts-eb3dc.firebaseapp.com\",\r\n    databaseURL: \"https://businesscontacts-eb3dc.firebaseio.com\",\r\n    projectId: \"businesscontacts-eb3dc\",\r\n    storageBucket: \"businesscontacts-eb3dc.appspot.com\",\r\n    // messagingSenderId: \"623001757792\"\r\n  }\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 93;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 93\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":""}